d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
re<-compute.es::mes(rt$estimate[1],rt$estimate[2],rsd[1],rsd[2],rt2[1],rt2[2], verbose=FALSE)
return(list(t=rt,N=rt2,SD=rsd,d=re$d))
}
}
great_t(d$Quiz,d$SEX,paired=FALSE)
great_t(d$Quiz,d$AREAdis,paired=TRUE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
library(compute.es)
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
re<-compute.es::mes(rt$estimate[1],rt$estimate[2],rsd[1],rsd[2],rt2[1],rt2[2], verbose=FALSE)
d<-sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]- 2))
return(list(t=rt,N=rt2,SD=rsd,d=d))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
library(compute.es)
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
re<-compute.es::mes(rt$estimate[1],rt$estimate[2],rsd[1],rsd[2],rt2[1],rt2[2], verbose=FALSE)
d<-sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]- 2))
return(list(t=rt,N=rt2,SD=rsd,d=re))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
library(compute.es)
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
re<-compute.es::mes(rt$estimate[1],rt$estimate[2],rsd[1],rsd[2],rt2[1],rt2[2], verbose=FALSE)
d<-rt$estimate[1]-rt$estimate[2]/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]- 2))
return(list(t=rt,N=rt2,SD=rsd,d=d))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$Quiz,d$AREAdis,paired=TRUE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
library(compute.es)
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
re<-compute.es::mes(rt$estimate[1],rt$estimate[2],rsd[1],rsd[2],rt2[1],rt2[2], verbose=FALSE)
d<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]- 2))
return(list(t=rt,N=rt2,SD=rsd,d=d))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
library(compute.es)
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
re<-compute.es::mes(rt$estimate[1],rt$estimate[2],rsd[1],rsd[2],rt2[1],rt2[2], verbose=FALSE)
dd<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]- 2))
return(list(t=rt,N=rt2,SD=rsd,d=dd))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
}
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
library(compute.es)
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
re<-compute.es::mes(rt$estimate[1],rt$estimate[2],rsd[1],rsd[2],rt2[1],rt2[2], verbose=FALSE)
d<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
d<-unname(d)
return(list(t=rt,N=rt2,SD=rsd,d=d))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$Quiz,d$AREAdis,paired=TRUE)
daihiko_t(d$Quiz,d$AREAdis,paired=TRUE)
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
library(compute.es)
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
re<-compute.es::mes(rt$estimate[1],rt$estimate[2],rsd[1],rsd[2],rt2[1],rt2[2], verbose=FALSE)
d<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
#d<-unname(d)
return(list(t=rt,N=rt2,SD=rsd,d=d))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$Quiz,d$AREAdis,paired=TRUE)
d=(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
library(compute.es)
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
re<-compute.es::mes(rt$estimate[1],rt$estimate[2],rsd[1],rsd[2],rt2[1],rt2[2], verbose=FALSE)
d=(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
#d<-unname(d)
return(list(t=rt,N=rt2,SD=rsd,d=d))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$Quiz,d$AREAdis,paired=TRUE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
library(compute.es)
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
re<-compute.es::mes(rt$estimate[1],rt$estimate[2],rsd[1],rsd[2],rt2[1],rt2[2], verbose=FALSE)
chohend<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
chohend<-unname(chohend)
return(list(t=rt,N=rt2,SD=rsd,chohend=chohend))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$Quiz,d$AREAdis,paired=TRUE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
library(compute.es)
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
re<-compute.es::mes(rt$estimate[1],rt$estimate[2],rsd[1],rsd[2],rt2[1],rt2[2], verbose=FALSE)
chohend<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
return(list(t=rt,N=rt2,SD=rsd,chohend=chohend))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$Quiz,d$AREAdis,paired=TRUE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
library(compute.es)
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
re<-compute.es::mes(rt$estimate[1],rt$estimate[2],rsd[1],rsd[2],rt2[1],rt2[2], verbose=FALSE)
chohend<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
rt$estimate[1]
return(list(t=rt,N=rt2,SD=rsd,chohend=chohend))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$Quiz,d$AREAdis,paired=TRUE)
temp
temp$estimate[1]
unname(temp$estimate[1])
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
library(compute.es)
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
unname(rt)<-t.test(x~y)
unname(rsd)<-tapply(x,y,sd,na.rm=TRUE)
unname(rt1)<-table(y,x)
unname(rt2)<-apply(rt1,1,sum)
re<-compute.es::mes(rt$estimate[1],rt$estimate[2],rsd[1],rsd[2],rt2[1],rt2[2], verbose=FALSE)
cohend<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
return(list(t=rt,N=rt2,SD=rsd,cohend=cohend))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$Quiz,d$AREAdis,paired=TRUE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
library(compute.es)
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rt<-unname(rt)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rsd<-unname(rsd)
rt1<-table(y,x)
rt1<-unname(rt1)
rt2<-apply(rt1,1,sum)
rt2<-unname(rt2)
re<-compute.es::mes(rt$estimate[1],rt$estimate[2],rsd[1],rsd[2],rt2[1],rt2[2], verbose=FALSE)
cohend<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
return(list(t=rt,N=rt2,SD=rsd,cohend=cohend))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$Quiz,d$AREAdis,paired=TRUE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rt<-unname(rt)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rsd<-unname(rsd)
rt1<-table(y,x)
rt1<-unname(rt1)
rt2<-apply(rt1,1,sum)
rt2<-unname(rt2)
cohend<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
return(list(t=rt,N=rt2,SD=rsd,cohend=cohend))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$Quiz,d$AREAdis,paired=TRUE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
rt<-unname(rt)
rsd<-unname(rsd)
rt1<-unname(rt1)
rt2<-unname(rt2)
cohend<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
return(list(t=rt,N=rt2,SD=rsd,cohend=cohend))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
rt<-unname(rt)
rsd<-unname(rsd)
rt1<-unname(rt1)
cohend<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
return(list(t=rt,N=rt2,SD=rsd,cohend=cohend))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
cohend<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
return(list(t=rt,N=rt2,SD=rsd,cohend=cohend))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$Quiz,d$AREAdis,paired=TRUE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
cohend<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
cohend<-unname(cohend)
return(list(t=rt,N=rt2,SD=rsd,cohend=cohend))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$Quiz,d$AREAdis,paired=TRUE)
daihiko_t(d$Quiz,d$AREAdis,paired=TRUE)
daihiko_t(d$FoodLiteracy01,paired=TRUE)
daihiko_t(d$FoodLiteracy01,d$FoodLiteracy02,paired=TRUE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(meanx=mean(x),meany=mean(y),t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
cohend<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
cohend<-unname(cohend)
return(list(t=rt,N=rt2,SD=rsd,cohend=cohend))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$FoodLiteracy01,d$FoodLiteracy02,paired=TRUE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(mean(x)=mean(x),mean(y)=mean(y),t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
cohend<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
cohend<-unname(cohend)
return(list(t=rt,N=rt2,SD=rsd,cohend=cohend))
}
}
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(meanx=mean(x),meany=mean(y),t=rt,SD=rsd,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
cohend<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
cohend<-unname(cohend)
return(list(t=rt,N=rt2,SD=rsd,cohend=cohend))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$FoodLiteracy01,d$FoodLiteracy02,paired=TRUE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(meanx=mean(x),meany=mean(y),SD=rsd,t=rt,d=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
cohend<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
cohend<-unname(cohend)
return(list(t=rt,N=rt2,SD=rsd,cohend=cohend))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$FoodLiteracy01,d$FoodLiteracy02,paired=TRUE)
# pairedで欠損値がある場合にはそのまま使わないこと
daihiko_t<-function(x,y,paired=TRUE) {
if (paired) {
rt<-t.test(x,y,paired=TRUE)
rsd<-c(sd(x,na.rm=T),sd(y,na.rm=T))
d<-abs(mean(x-y)/(sd(x-y)/sqrt(2*(1-cor(x,y)))))
return(list(meanx=mean(x),meany=mean(y),SD=rsd,t=rt,cohend=d))
}
else {
rt<-t.test(x~y)
rsd<-tapply(x,y,sd,na.rm=TRUE)
rt1<-table(y,x)
rt2<-apply(rt1,1,sum)
cohend<-(rt$estimate[1]-rt$estimate[2])/sqrt(((rt2[1]-1)*rsd[1]^2+(rt2[2]-1)*rsd[2]^2)/(rt2[1]+rt2[2]-2))
cohend<-unname(cohend)
return(list(t=rt,N=rt2,SD=rsd,cohend=cohend))
}
}
daihiko_t(d$Quiz,d$SEX,paired=FALSE)
daihiko_t(d$FoodLiteracy01,d$FoodLiteracy02,paired=TRUE)
